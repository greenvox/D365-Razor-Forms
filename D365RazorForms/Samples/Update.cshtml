@using Microsoft.Xrm.Sdk
@using Microsoft.Crm.Sdk
@using Microsoft.Xrm.Tooling.Connector
@using Microsoft.Xrm.Sdk.Query
@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Configuration
@using D365RazorForms
@{
    Layout = "~/Layouts/_Layout.cshtml";

    var CompanyLogo = "https://i.imgur.com/mJf4mXA.png";
    var CompanyName = "Contoso Bank";
    var FormTitle = "Field Service Site Access Requirements";

    PrimaryEntityId = Request.QueryString["rf"];

    Guid _id = Guid.Empty;
    string _firstname = string.Empty;
    string _lastname = string.Empty;
    string _mobilephone = string.Empty;
    string _emailaddress1 = string.Empty;
    string _fullname = string.Empty;

    var connection = ConfigurationManager.AppSettings[ConnectionName];
    var service = new CrmServiceClient(connection);

    if (string.IsNullOrEmpty(PrimaryEntityId))
    {
        return;
    }
    else
    {
        var _columns = new ColumnSet ("firstname","lastname","emailaddress1", "mobilephone", "fullname");
        var record = new Entity();
        record = service.Retrieve(PrimaryEntity, Guid.Parse(PrimaryEntityId), _columns);

        if (record != null)
        {
            _id = record.Id;
            _firstname = EntityExtensions.GetString(record, obj.firstname.Value, null);
            _lastname = EntityExtensions.GetString(record, obj.lastname.Value, null);
            _emailaddress1 = EntityExtensions.GetString(record, obj.emailaddress1.Value, null);
            _mobilephone = EntityExtensions.GetString(record, obj.mobilephone.Value, null);
            _fullname = EntityExtensions.GetString(record, "fullname", null);
        }
    }
}
    <div class="container">
        <div class="text-center">
            <img src=@CompanyLogo class="p-3" width="300" alt="Logo" />
        </div>
        <div class="text-center">
            <h5>@FormTitle</h5>
        </div>
        <form method="post" action="@{HandlePostRequest();}">
            <div class="card mt-3">
                <h5 class="card-header">
                    Update @_fullname
                </h5>
                <div class="card-body">
                    <div class="form-group">
                        <div class="form-group">
                            <label class="col-form-label">@obj.firstname.Key</label>
                            <input class="form-control" type="text" name="@obj.firstname.Value" value="@_firstname" />
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">@obj.lastname.Key</label>
                            <input class="form-control" type="text" name="@obj.lastname.Value" value="@_lastname" />
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">@obj.emailaddress1.Key</label>
                            <input class="form-control" type="text" name="@obj.emailaddress1.Value" value="@_emailaddress1" />
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">@obj.mobilephone.Key</label>
                            <input class="form-control" type="text" name="@obj.mobilephone.Value" value="@_mobilephone" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <input class="form-control" type="hidden" name="msdyn_workorderid" value="@_id.ToString()" />
            </div>
            <div class="form-group">
                @AntiForgery.GetHtml()
                <input type="submit" value="Send" class="btn btn-primary" />
            </div>
        </form>
    </div>

@functions {

    private string PrimaryEntity = "contact";
    private string PrimaryEntityId = string.Empty;
    private string ConnectionName = "default";
    private string ErrorMessage = string.Empty;

    private struct obj
    {
        internal static KeyValuePair<string, string> firstname { get; private set; } = new KeyValuePair<string, string>("First Name", "firstname");
        internal static KeyValuePair<string, string> lastname { get; private set; } = new KeyValuePair<string, string>("Last Name", "lastname");
        internal static KeyValuePair<string, string> emailaddress1 = new KeyValuePair<string, string>("Email Address", "emailaddress1");
        internal static KeyValuePair<string, string> mobilephone = new KeyValuePair<string, string>("Mobile Phone", "mobilephone");
    }

    protected void HandlePostRequest()
    {
        if (IsPost)
        {

            AntiForgery.Validate();
            try
            {
                var _connectionString = ConfigurationManager.AppSettings[ConnectionName];

                using (var service = new CrmServiceClient(_connectionString))
                {
                    var rec = new Entity(PrimaryEntity, Guid.Parse(PrimaryEntityId));
                    rec[obj.firstname.Value] = Request.Form[obj.firstname.Value];
                    rec[obj.lastname.Value] = Request.Form[obj.lastname.Value];
                    rec[obj.emailaddress1.Value] = Request.Form[obj.emailaddress1.Value];
                    rec[obj.mobilephone.Value] = Request.Form[obj.mobilephone.Value];

                    service.Update(rec);
                }

                Response.Redirect("Success");
            }
            catch (HttpRequestValidationException ex)
            {
                ErrorMessage = "An error has occurred while processing this request.";
            }
        }
    }
}